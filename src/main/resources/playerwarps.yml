############################################################
#                                                          #
#                  MoreDiscordSRVHooks                     #
#              By Zeromaniac & MidnightCore                #
#                                                          #
#                 ☆ Player Warps Hook ☆                   #
#                                                          #
############################################################

# Foreword: PlaceholderAPI is supported, however we encourage you to use our placeholders, which all
# have curly braces '{}' around them - our placeholders parse data straight from Player Warps to make
# sure the data displayed is correct. Also, please do not worry about color codes here. These are embeds
# sent to discord, where color codes do not work like ingame. In addition, keep in mind that you need
# to have PlaceholderAPI and the responsible expansion installed in order to use PAPI placeholders.

# Supported placeholders in all image or Icon fields:
# - {playerAvatarUrl} = The shop owner's flat head image.
# - {playerHead3dUrl} = The shop owner's tilted 3D head image.
# - {playerBodyUrl} = The shop owner's tilted full body image.
# - {buyerAvatarUrl} = The buyer's flat head image.
# - {buyerHead3dUrl} = The buyer's tilted 3D head image.
# - {buyerBodyUrl} = The buyer's tilted full body image.
# - {botAvatarUrl} = The bot avatar image.
# - {itemImageUrl} = The item image being sold or bought in the shop.
# - {loreImageUrl} = The lore image of the item being sold or bought.
# Footer image not showing? The footer must contain text - thanks to discord.
# Fields are dynamic! You can add as many as you like to stretch out your embed!

ShortenPrices: true
# Should prices be shortened? Example: 1000 would become 1.0k, 2500 2.5k and so on.

NewWarpCreated:
 Embed:
  Enabled: true
  ChannelID: 
      - "0000000000"
      - "0000000000"
  Color: "#fcba03"
  Author:
    ImageUrl: "{playerAvatarUrl}"
    Name: "{player} 𝖈𝖗𝖊𝖆𝖙𝖊𝖉 𝖆 𝖈𝖍𝖊𝖘𝖙 𝖘𝖍𝖔𝖕"
    Url: ""
  ThumbnailUrl: "{itemImageUrl}"
  Title:
    Text: "{type}: {item} for {singleItemPriceBeforeTax}€ in {chestWorld}"
    Url: ""
  Description: ""
  Fields:
    - "LocX:;{chestLocationX};true"
    - "LocY:;{chestLocationY};true"
    - "LocZ:;{chestLocationZ};true"
  ImageUrl: "{loreImageUrl}"
  Footer:
    Text: ""
    IconUrl: ""
  Timestamp: true
# Supported placeholders in text fields for NewShopCreated:
# - {player} = The player who owns the shop.
# - {item} = The item name featured in this shop.
# - {type} = Returns either "Selling" or "Buying", based on type.
# - {singleItemPriceBeforeTax} = The original price before taxes were deducted per item the owner of the shop set.
# - {chestLocationX} = The X coordinate of the ChestShop position.
# - {chestLocationY} = The Y coordinate of the ChestShop position.
# - {chestLocationZ} = The Z coordinate of the ChestShop position.

Teleport:
 Embed:
  Enabled: true
  ChannelID: 
      - "0000000000"
      - "0000000000"
  Color: "#fcba03"
  Author:
    ImageUrl: "{buyerAvatarUrl}"
    Name: "𝕾𝖍𝖔𝖕 𝖙𝖗𝖆𝖓𝖘𝖆𝖈𝖙𝖎𝖔𝖓"
    Url: ""
  ThumbnailUrl: "{itemImageUrl}"
  Title:
    Text: "{buyer} {action} {amount} {item} {fromto} {player}'s shop"
    Url: ""
  Description: ""
  Fields:
    - "Total price without tax:;{incomeBeforeTax}€;true"
    - "Price per item:;{singleItemPriceBeforeTax}€;true"
    - "Tax rate:;{tax}%;true"
    - "Income owner:;{incomeAfterTax}€;true"
  ImageUrl: "{loreImageUrl}"
  Footer:
    Text: ""
    IconUrl: ""
  Timestamp: true
# Supported placeholders in text fields for Purchase:
# Even though the amount of placeholders offered here are quite... a lot, remember that making large embeds might spam your channel.
# - {player} = The player who owns the shop.
# - {buyer} = The player who bought from or sold to the shop. This can also be "seller" if the shop is buying items.
# - {item} = The item name featured in this shop.
# - {amount} = The amount of items that were sold to or bough from the shop.
# - {type} = Returns either "Selling" or "Buying", based on type. Using this variable here might be confusing to players as it returns what type the shop is, not what the action performed was. This is why the next two listed placeholders were made ;).
# - {action} = Returns "bought" or "sold" depending on if a player bought or sold to the shop.
# - {fromto} = Returns "from" (for the buying action to create "bought from") or "to" (for the selling action to create "sold to") based on the action, so we don't get sentences like "Player sold from x shop" - that would be retarded, haha.
# - {tax} = The tax rate defined in the QuickShop config.
# - {singleItemPriceBeforeTax} = The original price before taxes were deducted per item the owner of the shop set.
# - {incomeBeforeTax} = Original total price before taxes were deducted.
# - {incomeAfterTax} = The total the owner of the shop made after taxes were deducted.
# - {chestWorld} = Returns the world name the shop is located in.
# - {chestLocationX} = The X coordinate of the ChestShop position.
# - {chestLocationY} = The Y coordinate of the ChestShop position.
# - {chestLocationZ} = The Z coordinate of the ChestShop position.

WarpRemoved:
 Embed:
  Enabled: true
  ChannelID: 
      - "0000000000"
      - "0000000000"
  Color: "#fcba03"
  Author:
    ImageUrl: "{buyerAvatarUrl}"
    Name: "𝕾𝖍𝖔𝖕 𝖙𝖗𝖆𝖓𝖘𝖆𝖈𝖙𝖎𝖔𝖓"
    Url: ""
  ThumbnailUrl: "{itemImageUrl}"
  Title:
    Text: "{buyer} {action} {amount} {item} {fromto} {player}'s shop"
    Url: ""
  Description: ""
  Fields:
    - "Total price without tax:;{incomeBeforeTax}€;true"
    - "Price per item:;{singleItemPriceBeforeTax}€;true"
    - "Tax rate:;{tax}%;true"
    - "Income owner:;{incomeAfterTax}€;true"
  ImageUrl: "{loreImageUrl}"
  Footer:
    Text: ""
    IconUrl: ""
  Timestamp: true
# Supported placeholders in text fields for Purchase:
# Even though the amount of placeholders offered here are quite... a lot, remember that making large embeds might spam your channel.
# - {player} = The player who owns the shop.
# - {buyer} = The player who bought from or sold to the shop. This can also be "seller" if the shop is buying items.
# - {item} = The item name featured in this shop.
# - {amount} = The amount of items that were sold to or bough from the shop.
# - {type} = Returns either "Selling" or "Buying", based on type. Using this variable here might be confusing to players as it returns what type the shop is, not what the action performed was. This is why the next two listed placeholders were made ;).
# - {action} = Returns "bought" or "sold" depending on if a player bought or sold to the shop.
# - {fromto} = Returns "from" (for the buying action to create "bought from") or "to" (for the selling action to create "sold to") based on the action, so we don't get sentences like "Player sold from x shop" - that would be retarded, haha.
# - {tax} = The tax rate defined in the QuickShop config.
# - {singleItemPriceBeforeTax} = The original price before taxes were deducted per item the owner of the shop set.
# - {incomeBeforeTax} = Original total price before taxes were deducted.
# - {incomeAfterTax} = The total the owner of the shop made after taxes were deducted.
# - {chestWorld} = Returns the world name the shop is located in.
# - {chestLocationX} = The X coordinate of the ChestShop position.
# - {chestLocationY} = The Y coordinate of the ChestShop position.
# - {chestLocationZ} = The Z coordinate of the ChestShop position.
